using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;
using System;
using System.IO;
using System.Text;

namespace GVFS.PreBuild
{
    public class GenerateInstallScripts : Task
    {
        [Required]
        public string GitPackageVersion { get; set; }

        [Required]
        public string VFSForGitSetupFilename { get; set; }

        [Required]
        public string GitInstallBatPath { get; set; }

        [Required]
        public string VFSForGitInstallBatPath { get; set; }

        [Required]
        public string UnifiedInstallBatPath { get; set; }

        public override bool Execute()
        {
            this.Log.LogMessage(MessageImportance.High, "Creating install scripts for Git");

            Directory.CreateDirectory(Path.GetDirectoryName(this.GitInstallBatPath));

            File.WriteAllText(
                this.GitInstallBatPath,
                this.GetGitInstallCommand());

            File.WriteAllText(
                this.VFSForGitInstallBatPath,
                this.GetVFSForGitInstallCommand());

            StringBuilder sb = new StringBuilder();
            sb.AppendLine("REM AUTOGENERATED DO NOT EDIT");
            sb.AppendLine();
            sb.AppendLine(this.GetGitInstallCommand());
            sb.AppendLine();
            sb.AppendLine(this.GetVFSForGitInstallCommand());

            File.WriteAllText(
                this.UnifiedInstallBatPath,
                sb.ToString());

            return true;
        }

        public string GetGitInstallCommand()
        {
            return "dotnet new classlib -n GVFS.GitInstaller" + Environment.NewLine +
                   "cd GVFS.GitInstaller" + Environment.NewLine +
                   "dotnet add GVFS.GitInstaller.csproj package \"GitForWindows.GVFS.Installer\" --package-directory . --version \"" + this.GitPackageVersion + "\" --source \"https://pkgs.dev.azure.com/gvfs/ci/_packaging/Dependencies/nuget/v3/index.json\"" + Environment.NewLine +
                   "copy gitforwindows.gvfs.installer\\" + this.GitPackageVersion + @"\\tools\\Git-2.*.exe git-installer.exe" + Environment.NewLine +
                   ".\\git-installer.exe";
        }

        public string GetVFSForGitInstallCommand()
        {
            return "%~dp0\\" + this.VFSForGitSetupFilename + " /VERYSILENT /SUPPRESSMSGBOXES /NORESTART";
        }
    }
}
